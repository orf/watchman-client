from pathlib import Path

import pytest
import subprocess
import shutil
import tempfile

import pytest_asyncio

import watchman_client


@pytest.fixture()
def watchman_server():
    binary = shutil.which("watchman")
    # Can't use temp_dir here, as the temporary directory name generated by pytest is too long on macos :(
    tmp_path = Path(tempfile.mkdtemp())
    state_dir = tmp_path / "state"
    unix_socket = tmp_path / "socket"
    state_dir.mkdir()
    with subprocess.Popen(
        [
            binary,
            f"--foreground",
            f"--test-state-dir={state_dir}",
            f"--unix-listener-path={unix_socket}",
        ]
    ) as p:
        yield unix_socket
        p.kill()


@pytest_asyncio.fixture()
async def watchman_test_client(watchman_server):
    client = watchman_client.Client(watchman_server)
    async with client:
        yield client
